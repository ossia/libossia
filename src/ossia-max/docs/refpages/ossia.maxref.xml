<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="ossia" module="Ossia" category="Ossia">

	<digest>
		Ossia allows to configure the global device
	</digest>

	<description>
		Ossia allows to configure the global device that is created by default, and under which 
all parameters and models will be registered (until an [ossia.device object is added])
	</description>

	
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Ossia</metadata>
		<metadata name="tag">Ossia</metadata>
		<metadata name="tag">Network</metadata>
	</metadatalist>

	
	<!--INLETS-->
	<inletlist>
			<inlet id="0" name="Message input" type="any">
			<digest>Messages to ossia.model</digest>
			<description>Messages to the node</description>
		</inlet>
	</inletlist>


	<!--OUTLETS-->
	<outletlist>
			<outlet id="0" name="Info outlet" type="any">
			<digest>Various information messages</digest>
			<description>Messages and information in reply to various messages</description>
		</outlet>
	</outletlist>

	<!--METHODS-->	
	<methodlist>
		<method name="namespace">
			<arglist/>
			<digest>
				Output list of all parameters and their current values
			</digest>
			<description>
				Sending the (namespace) message to the leftmost inlet outputs the list of all parameters registered under this node, and their current values
			</description>
		</method>

		<method name="expose">
			<arglist/>
			<digest>
				Expose the global device to the network
			</digest>
			<description>
				Sending the (expose) message to the leftmost inlet will print its configuration parameters for the various available protocols
				Then, sending it with the appropriate values will expose the global device to the network, and allow it to be explored, queried and remotely-controlled.
			</description>
		</method>

		<method name="name">
			<arglist/>
			<digest>
				Set (or retrieve) the global device's name
			</digest>
			<description>
				Sending the (name) message to the leftmost inlet outputs its current name.
				Sending the (name someName) message to the leftmost inlet will set the global device's name to "someName"
			</description>
		</method>
	</methodlist>
	
	<!--ATTRIBUTES-->
	<attributelist>

		<attribute name="description" get="1" set="1" type="atom" size="1">
			<digest>
				Description of this node
			</digest>
			<description>
				The <at>description</at> attribute allows to give a textual description for this node. This helps documenting the parameter.
			</description>
		</attribute>

		<attribute name="invisible" get="1" set="1" type="int" size="1">
			<digest>
				Hide device on the network
			</digest>
			<description>
				The <at>invisible</at> attribute allows to hide device on the network. Note that this attribute cannot be changed once the device has been exposed on the network
			</description>
		</attribute>

		<attribute name="priority" get="1" set="1" type="int" size="1">
			<digest>
				Set priority
			</digest>
			<description>
				The <at>priority</at> attribute allows to order how several values of a same hierarchical level can be recalled 
			</description>
		</attribute>
		
		<attribute name="recall_safe" get="1" set="1" type="boolean" size="1">
			<digest>
				Enable or disable value update when recalling preset
			</digest>
			<description>
				The <a>recall_safe</a> attribute (default: off) allows to prevent value update when recalling a preset. This can be handy for example in live situation to prevent a model or parameter state to be recalled while being controlled by some processes (manual control, mapping, etc.)
			</description>
		</attribute>
		

		<attribute name="tags" get="1" set="1" type="atom" size="1">
			<digest>
				Tags associated with this node
			</digest>
			<description>
				The <at>tags</at> attribute allows to associate a variable number of tags for this node. This helps documenting the parameter.
			</description>
		</attribute>
		
		<attribute name="trim_address" get="1" set="1" type="boolean" size="1">
			<digest>
				Output absolute or relative address path
			</digest>
			<description>
				The <a>trim_address</a> attribute sets whether the address is output as a relative or absolute path
			</description>
		</attribute>

	</attributelist>
	

	<!--SEEALSO-->
	<seealsolist>
	</seealsolist>

	
</c74object>
