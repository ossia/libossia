name: ossia-purrdata

on: push

jobs:
  build-macos:
    runs-on: macos-14
    environment: 'Apple Certificate'
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-mac-toolchain
    - name: Build
      run: | 
        cmake -B build -S ${GITHUB_WORKSPACE} \
          -GNinja \
          -DCMAKE_BUILD_TYPE=Release \
          -DOSSIA_CI=1 \
          -DOSSIA_PD_ONLY=1 \
          -DOSSIA_PURR_DATA=1 \
          -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"

        cmake --build build
        cmake --build build --target install

    - uses: ./.github/actions/mac-codesign
      with:
        path-to-sign: "install/ossia-pd-package"
        output-name: ossia-purrdata.zip
        MAC_CERT_B64: ${{ secrets.MAC_CERT_B64 }}
        MAC_CERT_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
        MAC_ALTOOL_PASSWORD: ${{ secrets.MAC_ALTOOL_PASSWORD }}
          
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-pd
        path: install/ossia-pd-package

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-msvc-toolchain
    - name : Build
      shell: cmd
      run: |
        cmake -B build -S %GITHUB_WORKSPACE% -GNinja -DOSSIA_PD_ONLY=1 -DOSSIA_PURR_DATA=1 -DOSSIA_CI=1 -DCMAKE_SYSTEM_VERSION=7 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake --install build

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-pd
        path: install/ossia-pd-package/ossia

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-ubuntu-toolchain
    - name: Build
      run: | 
        cmake -B build -S ${GITHUB_WORKSPACE} \
          -GNinja \
          -DOSSIA_PURR_DATA=1 \
          -DOSSIA_CI=1 \
          -DCMAKE_BUILD_TYPE=Release \
          -DOSSIA_PD_ONLY=1 \
          -DCMAKE_INSTALL_PREFIX=install
        cmake --build build
        cmake --build build --target install 
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-pd
        path: install/ossia-pd-package/ossia

  build-rpi:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-rpi-toolchain
    - name: Build
      run: |
        export CTEST_OUTPUT_ON_FAILURE=1
        export RPI_ROOT_PATH=/opt/cross-pi-gcc
        export PKG_CONFIG_SYSROOT_DIR=$RPI_ROOT_PATH
        export PKG_CONFIG_LIBDIR=${RPI_ROOT_PATH}/usr/lib/pkgconfig:${RPI_ROOT_PATH}/usr/share/pkgconfig:${RPI_ROOT_PATH}/usr/lib/arm-linux-gnueabihf/pkgconfig/
        export PATH=/opt/cross-pi-gcc/bin:${PATH}
        export LD_LIBRARY_PATH=/opt/cross-pi-gcc/lib:${LD_LIBRARY_PATH}

        cmake -B build -S ${GITHUB_WORKSPACE} -DCMAKE_TOOLCHAIN_FILE="${GITHUB_WORKSPACE}/cmake/toolchain/arm-linux-gnueabihf.cmake" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=install \
            -DOSSIA_CI=1 \
            -DOSSIA_PD_ONLY=1 \
            -DOSSIA_PURR_DATA=1 \
            ..

        cmake --build build
        cmake --build build --target install
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-pd
        path: install/ossia-pd-package/ossia

  upload_release:
    runs-on: ubuntu-latest
    needs: [ build-macos, build-windows, build-rpi, build-linux ]
    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          name: ossia-pd
          path: ossia
      - name: Rezip
        shell: bash
        run: |
          SHORT=${GITHUB_REF:11} # remove the 'refs/tags/' prefix
          SLUG=${SHORT//\//_} # replace '/' with '_'
          zip -r ossia-pd-${SLUG}.zip ossia
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ossia-pd*.zip
